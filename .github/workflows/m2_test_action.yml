name: M2 Test Action

on: 
   push:
      branches:
            - master
            
env:
   USERNAME: 'extend-deployer'
   USEREMAIL: "martin.liriano@extend.com"
   MAJOR_RELEASE: 'major release'
   MINOR_RELEASE: 'minor release'
   PATCH_RELEASE: 'patch release'
   if: ${{contains( github.event.head_commit.message, $MAJOR_RELEASE) || contains( github.event.head_commit.message, $MINOR_RELEASE) || contains( github.event.head_commit.message, $PATCH_RELEASE)}}
   RUN_UPDATE: 'true'
      
jobs:
  create-release:
    if: ${{$RUN_UPDATE == 'true'}}
    runs-on: ubuntu-latest
    steps:     
     - name: Checkout Code
       uses: actions/checkout@v2
     - name: setup python
       uses: actions/setup-python@v4
       with:
            pthon-version: '3.9'
     - name: update major version file
       if: contains( github.event.head_commit.message, $MAJOR_RELEASE)
       run: python version_update.py 0 "${{github.event.head_commit.message}}"
     - name: update minor version file
       if: contains( github.event.head_commit.message, $MINOR_RELEASE)
       run: python version_update.py 1 "${{github.event.head_commit.message}}"
     - name: update patch version file
       if: contains( github.event.head_commit.message, $PATCH_RELEASE)
       run: python version_update.py 2 "${{github.event.head_commit.message}}"
     - name: Set Tag Output
       id: set-tag
       run: echo "::set-output name=tag_name::$(sh get-version.sh)"
     - name: Create tag
       id: create-tag
       uses: actions/github-script@v6
       with: 
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ steps.set-tag.outputs.tag_name }}",
            sha: context.sha
          })
     - name: Push release files
       id: push-release-file
       run: |
          git config --global user.name $USERNAME
          git config --global user.email $USEREMAIL
          git add version.txt changelog.md
          git commit -m "version update deployment ${{ steps.set-tag.outputs.tag_name }}"
          git push
     - name: Create release
       id: set-release
       uses: ncipollo/release-action@v1
       with:  
        tag: ${{ steps.set-tag.outputs.tag_name }}

        
